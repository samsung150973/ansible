- name: configurring Node Js repo 
  ansible.builtin.shell: curl --silent --location https://rpm.nodesource.com/setup_16.x | sudo bash -

- name: install node JS 
  ansible.builtin.yum:
    name: nodejs  
    state: present

# creating roboshop user account
- name: creating a roboshop user account 
  ansible.builtin.user:
    name: "{{APPUSER}}"      #not to hardcode 
    comment: Roboshop User account

# Download and extract
- name: download and extract 
  ansible.builtin.unarchive:
    src: "https://github.com/stans-robot-project/{{COMPONENT}}/archive/main.zip"
    dest: /tmp
    remote_src: yes
    # remote_src option is required when performing copy

# Performimg catalogue cleanup
- name: Performimg catalogue cleanup
  ansible.builtin.file:
    path: /home/{{APPUSER}}/{{COMPONENT}}/
    state: absent


- name: Copying the files to roboshop directory 
  ansible.builtin.copy:
    src: /tmp/catalogue-main/   
    dest: /home/{{APPUSER}}/{{COMPONENT}}/
    owner: "{{APPUSER}}"    # to have the roboshop as user of the files
    group: "{{APPUSER}}"
    remote_src: yes           # the source of file is on remote server , mention "remote_src: yes"


# performimg npm install. generating node modules
- name: Generating Node Modules  
  community.general.npm:
    name: "coffee-script"
    path: /home/{{APPUSER}}/{{COMPONENT}}/ 

#
- name: Copying component systemd file 
  ansible.builtin.copy:
    src: systemd.service  
    dest: /etc/systemd/system/catalogue.service
    # the source of file is on local drive , so NO need of remote_src



  # daemon reload and restart service  and enable service
- name: Restarting the service
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    enabled: yes
    name: "{{COMPONENT}}"